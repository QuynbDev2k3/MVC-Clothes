// <auto-generated />
using System;
using Assignments.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignments.Migrations
{
    [DbContext(typeof(ShoppingDBConText))]
    [Migration("20230406212123_Assignments")]
    partial class Assignments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignments.Models.ChucVu", b =>
                {
                    b.Property<Guid>("ChucVuID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ChucVuID");

                    b.ToTable("chucVus");
                });

            modelBuilder.Entity("Assignments.Models.GioHang", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UserID");

                    b.ToTable("gioHangs");
                });

            modelBuilder.Entity("Assignments.Models.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("GioHangChiTietID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SanPhamID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GioHangChiTietID");

                    b.HasIndex("SanPhamID");

                    b.HasIndex("UserID");

                    b.ToTable("gioHangChiTiets");
                });

            modelBuilder.Entity("Assignments.Models.HoaDon", b =>
                {
                    b.Property<Guid>("HoaDonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HoaDonID");

                    b.HasIndex("UserID");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("Assignments.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("HoaDonChiTietID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<Guid>("HoaDonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SanPhamID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("HoaDonChiTietID");

                    b.HasIndex("HoaDonID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("Assignments.Models.NhanVien", b =>
                {
                    b.Property<Guid>("NhanVienID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChucVuID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("NhanVienID");

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("Assignments.Models.SanPham", b =>
                {
                    b.Property<Guid>("SanPhamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<string>("NhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SoLuongBanDau")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("SanPhamID");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("Assignments.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Assignments.Models.ChucVu", b =>
                {
                    b.HasOne("Assignments.Models.NhanVien", "NhanVien")
                        .WithMany("chucVus")
                        .HasForeignKey("ChucVuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Assignments.Models.GioHang", b =>
                {
                    b.HasOne("Assignments.Models.User", "User")
                        .WithOne("GioHang")
                        .HasForeignKey("Assignments.Models.GioHang", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Assignments.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("Assignments.Models.SanPham", "SanPham")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignments.Models.GioHang", "GioHang")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignments.Models.HoaDon", b =>
                {
                    b.HasOne("Assignments.Models.User", "User")
                        .WithMany("hoaDons")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Assignments.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("Assignments.Models.HoaDon", "HoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("HoaDonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignments.Models.SanPham", "SanPham")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignments.Models.GioHang", b =>
                {
                    b.Navigation("gioHangChiTiets");
                });

            modelBuilder.Entity("Assignments.Models.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("Assignments.Models.NhanVien", b =>
                {
                    b.Navigation("chucVus");
                });

            modelBuilder.Entity("Assignments.Models.SanPham", b =>
                {
                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("Assignments.Models.User", b =>
                {
                    b.Navigation("GioHang")
                        .IsRequired();

                    b.Navigation("hoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
